server {
    listen 80;
    server_name _;

    # Raiz para arquivos estáticos (CSS, JS, imagens)
    root /usr/share/nginx/html/public;
    index index.php index.html;

    # Se o arquivo existe (imagem, CSS etc), o Nginx serve diretamente.
    # Caso contrário, ele encaminha a requisição para o FrankenPHP por HTTP.
    location / {
        try_files $uri $uri/ @frankenphp;
    }

    # Quando cair em @frankenphp, faz proxy HTTP
    location @frankenphp {
        proxy_pass http://app:80;             # “app” é o nome do serviço no docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Atenção: não use fastcgi_pass aqui, pois o FrankenPHP não é um FastCGI
    # Apenas trate .php como parte de @frankenphp se não houver arquivo físico
    location ~ \.php$ {
        try_files $uri =404;
        proxy_pass http://app:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
